{"version":3,"sources":["speakerdeck.js"],"names":[],"mappings":"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","file":"speakerdeck.js","sourcesContent":["import { install } from 'source-map-support';install();\nimport request from 'request';\nimport cheerio from 'cheerio';\nimport qs from 'qs';\nimport _ from 'lodash';\n\nconst baseUrl = 'https://speakerdeck.com/'\nexport default class Speakerdeck {\n  // constructor() {\n  //\n  // }\n  getUser(username, cb) {\n    let url = `${baseUrl}${username}`;\n    let $;\n    let user = {};\n    request.get(url, (err, response, body) => {\n      if (response.statusCode !== 200) {\n        let error = new Error(response.headers.status)\n        return cb(error);\n      }\n      $ = cheerio.load(body);\n      user.display_name = $('.sidebar h2').text();\n      user.bio = $('.sidebar div.bio p').text();\n      user.starts = Number($('.sidebar ul.delimited').first().text().match(/\\d+/)[0]);\n      let talks = $('.talks .public');\n      user.talks = [];\n      for (var i = 0; i < talks.length; i++) {\n        let talk = {};\n        talk.title = $(talks[i]).find('h3.title a').text();\n        talk.date = new Date($(talks[i]).find('p.date').text().trim().split('by')[0]);\n        talk.thumb = $(talks[i]).find('.slide_preview img').attr('src');\n        talk.link = `${baseUrl}${$(talks[i]).find('.slide_preview').attr('href')}`\n        user.talks.push(talk);\n      }\n      return cb(null, user);\n    });\n  };\n\n  getUserTalk(opts, cb) {\n    let url = `${baseUrl}${opts.username}/${opts.talk}`;\n    let $;\n    let talk = {};\n    request.get(url, (err, response, body) => {\n      if (response.statusCode !== 200) {\n        let error = new Error(response.headers.status)\n        return cb(error);\n      }\n      $ = cheerio.load(body);\n      talk.title = $('#talk-details header h1').text();\n      talk.date = new Date($('#talk-details header p mark').first().text());\n      talk.category = $('#talk-details header p mark').last().text();\n      talk.description = $('.description p').text();\n      talk.stars = $('.stargazers').text().match(/\\d+/)[0];\n      talk.views = $('.views span').text().split(' ')[0];\n      talk.link = url;\n      return cb(null, talk)\n    });\n  }\n\n  getUserStars(username, cb) {\n    let url = `${baseUrl}${username}/stars`;\n    let $;\n    let stars = [];\n    request.get(url, (err, response, body) => {\n      $ = cheerio.load(body);\n      let talks = $('.talks .public');\n      for (var i = 0; i < talks.length; i++) {\n        let talk = {};\n        talk.title = $(talks[i]).find('h3.title a').text();\n        talk.date = new Date($(talks[i]).find('p.date').text().trim().split('by')[0]);\n        talk.thumb = $(talks[i]).find('.slide_preview img').attr('src');\n        talk.link = `${baseUrl}${$(talks[i]).find('.slide_preview').attr('href')}`;\n        talk.author = $(talks[i]).find('p.date a').text();\n        stars.push(talk);\n      }\n      return cb(null, stars);\n    });\n  }\n\n  getCategories(cb) {\n    let $;\n    let categories = [];\n    request.get(baseUrl, (err, response, body) => {\n      if (response.statusCode !== 200) {\n        let error = new Error(response.headers.status)\n        return cb(error);\n      }\n      $ = cheerio.load(body);\n      let el = $('.sidebar ul li');\n      for (var i = 0; i < el.length; i++) {\n        let category = {};\n        category.name = $(el[i]).find('a').text();\n        category.link = `${baseUrl}${$(el[i]).find('a').attr('href')}`\n\n        categories.push(category);\n      }\n      return cb(null, categories)\n    });\n  }\n\n  search(opts, cb){\n    let querystring = qs.stringify(opts);\n    let url = `${baseUrl}search?${querystring}`;\n    let $;\n    let results = [];\n    let pages = 0;\n    request.get(url, (err, response, body) => {\n      if (response.statusCode !== 200) {\n        let error = new Error(response.headers.status)\n        return cb(error);\n      }\n      $ = cheerio.load(body);\n      let elements = $('.talks .talk');\n      pages = $('.page').last().find('a').text();\n      _.forEach(elements, (el, i) => {\n        let result = {};\n        result.title = $(el).find('h3.title a').text();\n\n        results.push(result)\n      });\n\n      return cb(null, {results, pages: pages});\n    });\n  }\n}\n"],"sourceRoot":"/Users/paulopires/Workspace/Github/paulohp/speakerdeck/src"}